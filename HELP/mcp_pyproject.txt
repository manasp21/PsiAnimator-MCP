[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "psi-animator-mcp"
dynamic = ["version"]
description = "MCP server for Psi Animator functionality"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["mcp", "model-context-protocol", "psi", "animator", "ai", "llm"]
authors = [
  { name = "Your Name", email = "your.email@example.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "mcp>=1.0.0",
  "pydantic>=2.0.0",
  "anyio>=4.0.0",
  "httpx>=0.25.0",
  "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.21.0",
  "black>=23.0.0",
  "flake8>=6.0.0",
  "mypy>=1.5.0",
  "isort>=5.12.0",
  "pre-commit>=3.3.0",
  "bandit>=1.7.5",
  "safety>=2.3.0",
]
test = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "pytest-asyncio>=0.21.0",
  "httpx>=0.25.0",
]
docs = [
  "sphinx>=7.1.0",
  "sphinx-rtd-theme>=1.3.0",
  "myst-parser>=2.0.0",
]

[project.urls]
Documentation = "https://github.com/manasp21/PsiAnimator-MCP#readme"
Issues = "https://github.com/manasp21/PsiAnimator-MCP/issues"
Source = "https://github.com/manasp21/PsiAnimator-MCP"

[project.scripts]
psi-animator-mcp = "psi_animator_mcp.server:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/psi_animator_mcp/_version.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
  "/tests",
  "/.pre-commit-config.yaml",
  "/.gitignore",
]

[tool.hatch.build.targets.wheel]
packages = ["src/psi_animator_mcp"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
  "-ra",
  "--strict-markers",
  "--strict-config",
  "--cov=psi_animator_mcp",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=xml",
  "--cov-fail-under=70",
]
testpaths = ["tests"]
filterwarnings = [
  "error",
  "ignore::UserWarning",
  "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["psi_animator_mcp"]
branch = true
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/.*",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.black]
target-version = ["py39"]
line-length = 100
skip-string-normalization = false
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.flake8]
max-line-length = 100
extend-ignore = [
  "E203",  # whitespace before ':'
  "E501",  # line too long (handled by black)
  "W503",  # line break before binary operator
  "W504",  # line break after binary operator
]
exclude = [
  ".git",
  "__pycache__",
  "docs/source/conf.py",
  "old",
  "build",
  "dist",
  ".venv",
  ".eggs",
  "*.egg",
]
per-file-ignores = [
  "__init__.py:F401",  # unused imports
  "tests/*:S101",      # use of assert
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true
check_untyped_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_reexport = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
  "tests.*",
]
ignore_errors = true

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]