[build-system]
requires = [
    "setuptools>=64", 
    "wheel",
    "setuptools-scm>=8.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "psianimator-mcp"
dynamic = ["version"]
description = "Quantum Physics Simulation and Animation Server using MCP, QuTip, and Manim"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "PsiAnimator Development Team", email = "contact@psianimator.dev"}
]
maintainers = [
    {name = "PsiAnimator Development Team", email = "contact@psianimator.dev"}
]
keywords = [
    "quantum-physics", 
    "simulation", 
    "animation", 
    "manim", 
    "qutip", 
    "mcp",
    "visualization",
    "quantum-computing",
    "model-context-protocol",
    "claude",
    "ai"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Framework :: AsyncIO"
]

dependencies = [
    # Primary frameworks  
    "qutip>=4.7.0",
    "manim>=0.18.0",
    "mcp>=1.0.0",
    
    # Scientific computing
    "numpy>=1.24.0",
    "scipy>=1.11.0", 
    "matplotlib>=3.7.0",
    
    # Async and networking
    "aiohttp>=3.8.0",
    "websockets>=11.0.0",
    
    # Data handling
    "h5py>=3.9.0",
    "pandas>=2.0.0",
    
    # Optional quantum libraries for compatibility
    "qiskit>=0.45.0",
    
    # Utility libraries
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "loguru>=0.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "setuptools-scm>=8.0"
]

docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "sphinx-autodoc-typehints>=1.24.0"
]

research = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.1.0",
    "plotly>=5.15.0"
]

[project.urls]
Homepage = "https://github.com/username/PsiAnimator-MCP"
Repository = "https://github.com/username/PsiAnimator-MCP"
"Bug Reports" = "https://github.com/username/PsiAnimator-MCP/issues"
"Source Code" = "https://github.com/username/PsiAnimator-MCP"
Changelog = "https://github.com/username/PsiAnimator-MCP/blob/main/CHANGELOG.md"

[project.scripts]
psianimator-mcp = "psianimator_mcp.cli:main"

[project.entry-points."mcp.servers"]
psianimator-mcp = "psianimator_mcp.cli:main"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["psianimator_mcp*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.package-data]
psianimator_mcp = [
    "py.typed",
    "*.json",
    "*.yaml",
    "*.yml"
]
"*" = [
    "README.md",
    "LICENSE",
    "config/*.json",
    "scripts/*.sh",
    "scripts/*.ps1",
    "scripts/*.py"
]

# Dynamic version from package
[tool.setuptools.dynamic]
version = {attr = "psianimator_mcp.__version__"}

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Exclude auto-generated files
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["psianimator_mcp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "qutip.*",
    "manim.*",
    "mcp.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/psianimator_mcp",
    "--cov-report=term-missing", 
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--disable-warnings"
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "quantum: marks tests as quantum physics tests",
    "animation: marks tests as animation tests"
]

[tool.coverage.run]
source = ["src/psianimator_mcp"]
omit = [
    "*/tests/*",
    "*/examples/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]